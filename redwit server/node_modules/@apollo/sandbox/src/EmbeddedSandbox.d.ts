import type { IntrospectionQuery } from 'graphql';
import { HandleRequest } from './helpers/postMessageRelayHelpers';
import type { JSONObject } from './helpers/types';
export interface EmbeddableSandboxOptions {
    target: string | HTMLElement;
    initialEndpoint?: string;
    initialState?: {
        document?: string;
        variables?: JSONObject;
        headers?: Record<string, string>;
    };
    handleRequest?: HandleRequest;
    includeCookies?: boolean;
}
export declare class EmbeddedSandbox {
    options: EmbeddableSandboxOptions;
    handleRequest: HandleRequest;
    embeddedSandboxIFrameElement: HTMLIFrameElement;
    uniqueEmbedInstanceId: number;
    private disposable;
    constructor(options: EmbeddableSandboxOptions);
    dispose(): void;
    injectEmbed(): HTMLIFrameElement;
    validateOptions(): void;
    updateSchemaInEmbed({ schema, }: {
        schema?: string | IntrospectionQuery | undefined;
    }): void;
}
